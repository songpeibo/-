//在sort包中有着三个包,sort_abstract,sort_type,sort_exam
//sort_abstract包中只有一个类Sort_Abstract,这是一个抽象类，作为所有排序算法的父类，类中只有抽象方法
//sort_type包中包含各种排序算法，但这些排序算法只是思想上的一种类，并没有实现具体数据类型，作为实例排序算法的父类
//sort_exam包中包含各种排序算法的在特定数据类型下的实现，这个可以随时改变，添加或删除

//view包中则十分单纯，描述的就是面板

//对于下拉框来实现排序类型选择，因为有两个下拉框，因此不能较好同步，或者同步所需代价太大
//这里采用mode数组进行标记类型，数组第一位表示排序方法选择，第二位表示数据类型选择
//对于每一个排序类型添加监听，以便可以处理不同类型数据排序
//切记不同数据类型一定要选取不同的下拉框，否则会报错

//这个程序可以再做优化，例如数据类型是否可以向C++中那样使用Type,或者向python那样进行动态数据类型确定
//另一个优化我认为可以放在对下拉框事件的处理上

//其实感觉这个程序对于类之间的继承体现的不好，基本上等同于重写每个类，而不是使用父类中的某些方法

//对于对象的排序，我打算再做一个对象生成器，生成所需对象，可以采用列表的形式，这里就可以借鉴猜数字中的排行榜实现
//对于文件的排序，现在有两种排序，一种是根据文件大小
    //另一种则是根据文件类型和文件名称进行排序
//这里需要读入文件或文件夹，还算比较麻烦

//对于字符和字符串而言，可以先实现字符，字符比较可以转化为ASCII码进行比较
//对于字符串而言，则可以制造一个二维数组（思想上），每个数组中存放的是新的数组，新的数组中存放的是字符串转化为的字符数组
//这里就可以调用字符比较对每个数组中的相同位置的元素进行比较，如果相同进行下一个比较，否则排位

//这里的排序显然都是正序排序，如果想要正反都有，则需要添加一个变量对其进行判断，可以再添加一个下拉框，这个实现相对简单

//动态展示？？？还是不太会做

//对于int,double可以采用分隔函数进行转换,但对于char类型，因为从string到char有转换函数，因此不用分隔函数

//字符串排序有两种排序方法，一种是按字典顺序进行排序，另一种是按照字符串大小及ASCII码总和进行排序